/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.21.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint64 = string;
export type Uint128 = string;
export interface InstantiateMsg {
  admin: string;
  cw721_code_id: Uint64;
  cw721_instantiate_msg: InstantiateMsg1;
  rarities: Rarity[];
  subspace_id: Uint64;
}
export interface InstantiateMsg1 {
  minter: string;
  name: string;
  symbol: string;
}
export interface Rarity {
  engagement_threshold: number;
  mint_fees: Coin[];
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  mint: {
    post_id: Uint64;
    rarity_level: number;
    remarkables_uri: string;
  };
} | {
  update_rarity_mint_fees: {
    new_fees: Coin[];
    rarity_level: number;
  };
} | {
  update_admin: {
    new_admin: string;
  };
} | {
  claim_fees: {
    receiver: string;
  };
};
export type QueryMsg = {
  config: {};
} | {
  rarities: {};
} | {
  all_nft_info: {
    include_expired?: boolean | null;
    token_id: string;
  };
} | {
  tokens: {
    limit?: number | null;
    owner: string;
    start_after?: string | null;
  };
};
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export interface AllNftInfoResponseForMetadata {
  access: OwnerOfResponse;
  info: NftInfoResponseForMetadata;
}
export interface OwnerOfResponse {
  approvals: Approval[];
  owner: string;
}
export interface Approval {
  expires: Expiration;
  spender: string;
}
export interface NftInfoResponseForMetadata {
  extension: Metadata;
  token_uri?: string | null;
}
export interface Metadata {
  post_id: number;
  rarity_level: number;
  subspace_id: number;
}
export type Addr = string;
export interface QueryConfigResponse {
  admin: Addr;
  cw721_address: Addr;
  cw721_code_id: Uint64;
  subspace_id: Uint64;
}
export interface QueryRaritiesResponse {
  rarities: Rarity[];
}
export interface TokensResponse {
  tokens: string[];
}