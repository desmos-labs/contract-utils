/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.20.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint64 = string;
export type Timestamp = Uint64;
export interface InstantiateMsg {
  admin: string;
  cw721_code_id: Uint64;
  cw721_instantiate_msg: InstantiateMsg1;
  event_info: EventInfo;
  minter: string;
}
export interface InstantiateMsg1 {
  minter: string;
  name: string;
  symbol: string;
}
export interface EventInfo {
  creator: string;
  end_time: Timestamp;
  per_address_limit: number;
  poap_uri: string;
  start_time: Timestamp;
}
export type ExecuteMsg = {
  enable_mint: {};
} | {
  disable_mint: {};
} | {
  mint: {};
} | {
  mint_to: {
    recipient: string;
  };
} | {
  update_event_info: {
    end_time: Timestamp;
    start_time: Timestamp;
  };
} | {
  update_admin: {
    new_admin: string;
  };
} | {
  update_minter: {
    new_minter: string;
  };
};
export type QueryMsg = {
  config: {};
} | {
  event_info: {};
} | {
  minted_amount: {
    user: string;
  };
} | {
  all_nft_info: {
    include_expired?: boolean | null;
    token_id: string;
  };
} | {
  tokens: {
    limit?: number | null;
    owner: string;
    start_after?: string | null;
  };
};
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Addr = string;
export interface AllNftInfoResponseForMetadata {
  access: OwnerOfResponse;
  info: NftInfoResponseForMetadata;
}
export interface OwnerOfResponse {
  approvals: Approval[];
  owner: string;
}
export interface Approval {
  expires: Expiration;
  spender: string;
}
export interface NftInfoResponseForMetadata {
  extension: Metadata;
  token_uri?: string | null;
}
export interface Metadata {
  claimer: Addr;
}
export interface QueryConfigResponse {
  admin: Addr;
  cw721_contract: Addr;
  cw721_contract_code: Uint64;
  mint_enabled: boolean;
  minter: Addr;
  per_address_limit: number;
}
export interface QueryEventInfoResponse {
  creator: Addr;
  end_time: Timestamp;
  poap_uri: string;
  start_time: Timestamp;
}
export interface QueryMintedAmountResponse {
  amount: number;
  user: Addr;
}
export interface TokensResponse {
  tokens: string[];
}